A simple Python script to create an HTTP server that serves files from the /home/osboxes directory.
This will allow you to access these files from your laptop's browser using the VM's IP address.

Here's a Python3 script to achieve this:

import http.server
import socketserver

# Define the handler to serve files from /home/osboxes
handler = http.server.SimpleHTTPRequestHandler
handler.directory = "/home/osboxes"

# Define the port to expose
PORT = 8000

# Create the server object
with socketserver.TCPServer(("", PORT), handler) as httpd:
    print(f"Serving files from /home/osboxes at http://192.168.1.11:{PORT}")
    # Serve files until interrupted
    httpd.serve_forever()
Steps to Run the Script:
Save the Script:

Save the above script to a file, for example, serve_files.py.
Run the Script:

Open a terminal in your Ubuntu VM.
Navigate to the directory where you saved serve_files.py.
Run the script using Python3:
python3 serve_files.py
Access the Files:

Open a browser on your laptop.
Go to http://192.168.1.11:8000.
You should see the directory listing of /home/osboxes and be able to access the files.
Troubleshooting:
Port Already in Use:

If you encounter an error indicating that the port is already in use, you can either stop the process using that port or choose a different port by changing the PORT variable in the script.
Firewall Settings:

Ensure that your VM's firewall allows incoming connections on the specified port (8000 in this case). You can allow the port using:
sudo ufw allow 8000
sudo ufw reload







----------


Yes, it is possible to display additional file information such as the last modified date, time, and owner when serving files from a directory using a Python HTTP server. However, the default `http.server.SimpleHTTPRequestHandler` does not provide this information. You can extend the handler to include these details.

Here's an updated version of the Python script that includes the last modified date, time, and owner for each file:

```python
import http.server
import socketserver
import os
import pwd
import datetime

class CustomHTTPRequestHandler(http.server.SimpleHTTPRequestHandler):
    def list_directory(self, path):
        try:
            list = os.listdir(path)
        except os.error:
            self.send_error(http.HTTPStatus.NOT_FOUND, "No permission to list directory")
            return None
        list.sort(key=lambda a: a.lower())
        r = []
        displaypath = os.path.relpath(path, self.directory)
        title = 'Directory listing for %s' % displaypath
        r.append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">')
        r.append('<html>\n<title>%s</title>\n<body>\n<h2>%s</h2>' % (title, title))
        r.append('<hr>\n<ul>')
        for name in list:
            fullname = os.path.join(path, name)
            displayname = linkname = name
            if os.path.isdir(fullname):
                displayname = name + "/"
                linkname = name + "/"
            if os.path.islink(fullname):
                displayname = name + "@"
            file_stat = os.stat(fullname)
            file_owner = pwd.getpwuid(file_stat.st_uid).pw_name
            file_mtime = datetime.datetime.fromtimestamp(file_stat.st_mtime).strftime('%Y-%m-%d %H:%M:%S')
            r.append('<li><a href="%s">%s</a> - %s - %s</li>' % (linkname, displayname, file_mtime, file_owner))
        r.append('</ul>\n<hr>\n</body>\n</html>\n')
        encoded = '\n'.join(r).encode('utf-8', 'surrogateescape')
        self.send_response(http.HTTPStatus.OK)
        self.send_header("Content-type", "text/html; charset=utf-8")
        self.send_header("Content-Length", str(len(encoded)))
        self.end_headers()
        return encoded

# Define the handler to serve files from /home/osboxes
handler = CustomHTTPRequestHandler
handler.directory = "/home/osboxes"

# Define the port to expose
PORT = 8000

# Create the server object
with socketserver.TCPServer(("", PORT), handler) as httpd:
    print(f"Serving files from /home/osboxes at http://192.168.1.11:{PORT}")
    # Serve files until interrupted
    httpd.serve_forever()
```

### Steps to Run the Script:

1. **Save the Script**:
   - Save the above script to a file, for example, `serve_files_with_details.py`.

2. **Run the Script**:
   - Open a terminal in your Ubuntu VM.
   - Navigate to the directory where you saved `serve_files_with_details.py`.
   - Run the script using Python3:
     ```bash
     python3 serve_files_with_details.py
     ```

3. **Access the Files**:
   - Open a browser on your laptop.
   - Go to `http://192.168.1.11:8000`.
   - You should see the directory listing of `/home/osboxes` with the last modified date, time, and owner for each file.

This script will expose the files in `/home/osboxes` and display additional details such as the last modified date, time, and owner in the directory listing. Let me know if you need any further assistance!



-----------


To ensure that files are displayed in the browser rather than being downloaded, you need to set the appropriate MIME types for the files. By default, some file types may be downloaded instead of displayed. You can customize the `Content-Type` header to handle this.

Here's an updated version of the Python script that attempts to display files in the browser when possible:

```python
import http.server
import socketserver
import os
import pwd
import datetime
import mimetypes

class CustomHTTPRequestHandler(http.server.SimpleHTTPRequestHandler):
    def list_directory(self, path):
        try:
            list = os.listdir(path)
        except os.error:
            self.send_error(http.HTTPStatus.NOT_FOUND, "No permission to list directory")
            return None
        list.sort(key=lambda a: a.lower())
        r = []
        displaypath = os.path.relpath(path, self.directory)
        title = 'Directory listing for %s' % displaypath
        r.append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">')
        r.append('<html>\n<title>%s</title>\n<body>\n<h2>%s</h2>' % (title, title))
        r.append('<hr>\n<ul>')
        for name in list:
            fullname = os.path.join(path, name)
            displayname = linkname = name
            if os.path.isdir(fullname):
                displayname = name + "/"
                linkname = name + "/"
            if os.path.islink(fullname):
                displayname = name + "@"
            file_stat = os.stat(fullname)
            file_owner = pwd.getpwuid(file_stat.st_uid).pw_name
            file_mtime = datetime.datetime.fromtimestamp(file_stat.st_mtime).strftime('%Y-%m-%d %H:%M:%S')
            r.append('<li><a href="%s">%s</a> - %s - %s</li>' % (linkname, displayname, file_mtime, file_owner))
        r.append('</ul>\n<hr>\n</body>\n</html>\n')
        encoded = '\n'.join(r).encode('utf-8', 'surrogateescape')
        self.send_response(http.HTTPStatus.OK)
        self.send_header("Content-type", "text/html; charset=utf-8")
        self.send_header("Content-Length", str(len(encoded)))
        self.end_headers()
        return encoded

    def guess_type(self, path):
        mime_type, _ = mimetypes.guess_type(path)
        if mime_type is None:
            mime_type = 'application/octet-stream'
        return mime_type

    def end_headers(self):
        self.send_header('Cache-Control', 'no-store')
        super().end_headers()

# Define the handler to serve files from /home/osboxes
handler = CustomHTTPRequestHandler
handler.directory = "/home/osboxes"

# Define the port to expose
PORT = 8000

# Create the server object
with socketserver.TCPServer(("", PORT), handler) as httpd:
    print(f"Serving files from /home/osboxes at http://192.168.1.11:{PORT}")
    # Serve files until interrupted
    httpd.serve_forever()
```

### Steps to Run the Script:

1. **Save the Script**:
   - Save the above script to a file, for example, `serve_files_with_details.py`.

2. **Run the Script**:
   - Open a terminal in your Ubuntu VM.
   - Navigate to the directory where you saved `serve_files_with_details.py`.
   - Run the script using Python3:
     ```bash
     python3 serve_files_with_details.py
     ```

3. **Access the Files**:
   - Open a browser on your laptop.
   - Go to `http://192.168.1.11:8000`.
   - You should see the directory listing of `/home/osboxes` with the last modified date, time, and owner for each file. Files like text files, images, and HTML should display in the browser, while other types may still download depending on the browser's handling of MIME types.

This script will expose the files in `/home/osboxes` and attempt to display them in the browser when possible. Let me know if you need any further assistance!